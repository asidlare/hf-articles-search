[project]
name = "hf-articles-search"
version = "0.1.0"
description = ""
authors = [
    { name = "Anna Sidlarewicz", email = "asidlare@gmail.com" }
]
requires-python = ">=3.13.5"
dependencies = [
    "more-itertools",
    "sqlalchemy[asyncio]",
    "pgvector",
    "uvicorn[standard]",
    "fastapi[all]",
    "fastapi-mcp",
    "pydantic",
    "asyncpg",
    "alembic",
    "aiohttp",
    "beautifulsoup4",
    "openai",
    "numpy",
    "pandas",
]

[project.optional-dependencies]
dev = [
    "mypy",
    "pytest",
    "pytest-asyncio",
    "coverage",
    "pytest-cov",
    "pytest-mimesis",
    "pytest-mock",
    "pytest-postgresql",
    "psycopg[binary]",
    "httpx",
    "sentence-transformers",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.hatch.build]
include = [
    "app/**/*.py",
    "app/**/*.pyi",
]
exclude = [
    "tests/**",
]

[tool.pytest.ini_options]
testpaths = "tests"
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test* *Tests"
asyncio_default_fixture_loop_scope = "session"
asyncio_mode = "auto"
pythonpath = ["."]
addopts = [
    "--strict-markers",
    "--strict-config",
    "-ra"
]

[tool.mypy]
check_untyped_defs = true
namespace_packages = true
plugins = "sqlalchemy.ext.mypy.plugin"
pretty = true
show_error_context = true
exclude = ".venv"

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "backoff.*",
    "opentraining.*",
]
ignore_missing_imports = true
